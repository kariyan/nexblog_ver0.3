<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.namoo.mybatis.blog.mapper.BlogMapper">

	<sql id="selectBlogs">
		SELECT
			B.id as blog_id,
			B.title as blog_title,
			B.author_id as blog_author_id,
			A.id as author_id,
			A.name as author_name,
			A.password as author_password,
			A.email as author_email,
			P.id,
			P.subject,
			P.contents
		FROM Blog_tb B
			LEFT OUTER JOIN Author_tb A on B.author_id = A.id
			LEFT OUTER JOIN Post_tb P on B.id = P.blog_id
	</sql>

	<resultMap id="blogMap" type="Blog" >
		<id property="id" column="blog_id"/>
		<result property="title" column="blog_title"/>
		<association property="author" column="author_id" javaType="Author" select="com.namoo.mybatis.blog.mapper.AuthorMapper.findAuthor" />
		<collection property="posts" column="id" ofType="Post" select="com.namoo.mybatis.blog.mapper.PostMapper.findPost"/>
	</resultMap>

	<select id="findBlog" parameterType="int" resultMap="blogWithAuthorMap">
		<include refid="selectBlogs"/>
		WHERE b.id = #{id}
	</select>

	<select id="findAllBlogs" resultMap="blogWithAuthorMap">
		<include refid="selectBlogs"/>
	</select>

	<select id="findBlogsByTitle" parameterType="string" resultMap="blogWithAuthorMap">
		<include refid="selectBlogs"/>
		WHERE B.title LIKE '%'||#{title}||'%'
	</select>
 
 	<select id="findBlogByAuthorId" parameterType="string" resultMap="blogWithAuthorMap">
		<include refid="selectBlogs"/>
		WHERE b.author_id = #{authorId}
 	</select>
 
    <resultMap id="blogWithAuthorMap" type="Blog" >
		<id property="id" column="blog_id"/>
		<result property="title" column="blog_title"/>
		<association property="author" javaType="Author">
			<id property="id" column="author_id"/>
			<result property="name" column="author_name"/>
			<result property="password" column="author_password"/>
			<result property="email" column="author_email"/>
		</association>
		<collection property="posts" ofType="Post">
			<id property="id" column="id"/>
			<result property="subject" column="subject"/>
			<result property="contents" column="contents"/>
		</collection>
	</resultMap>
    
    <select id="selectBlogWithAuthor" parameterType="int" resultMap="blogWithAuthorMap">
		SELECT
		B.id as blog_id,
		B.title as blog_title,
		B.author_id as blog_author_id,
		A.id as author_id,
		A.password as author_password,
		A.name as author_name
		FROM Blog_tb B
		LEFT OUTER JOIN Author_tb A on B.author_id = A.id
		WHERE B.id = #{id}
	</select>

	<resultMap id="blogWithPostMap" type="Blog">
		<id property="id" column="blog_id"/>
		<result property="title" column="blog_title"/>
		<association property="author" column="blog_author_id" javaType="Author">
			<id property="id" column="author_id"/>
			<result property="name" column="author_name"/>
			<result property="password" column="password"/>
			<result property="email" column="author_email"/>
		</association>
		<collection property="posts" column="id" ofType="Post">
			<id property="id" column="id"/>
			<result property="subject" column="subject"/>
			<result property="contents" column="contents"/>
		</collection>
	</resultMap>

	<select id="findBlogByCondition" parameterType="Blog" resultMap="blogWithPostMap">
		<include refid="selectBlogs"/>
		<where>
			<if test="author.id != null">
				A.id = #{author.id}
			</if>
			<if test="author.name != null">
				AND A.name = #{author.name}
			</if>
			<if test="author.email != null">
				AND A.email = #{author.email}
			</if>
		</where>
	</select>

	<select id="selectBlogWithPost" parameterType="int" resultMap="blogWithPostMap">
		<include refid="selectBlogs"/>
		WHERE P.id = #{id}
	</select>
	
	<resultMap id="selectBlogMap" type="Blog" >
		<id property="id" column="blog_id"/>
		<result property="title" column="title"/>
		<association property="author" column="blog_author_id" javaType="Author" select="com.namoo.mybatis.blog.mapper.AuthorMapper.findAuthor"/>
		<collection property="posts" column="id" ofType="Post">
			<id property="id" column="id"/>
			<result property="subject" column="subject"/>
			<result property="contents" column="contents"/>
		</collection>
	</resultMap>

	<select id="selectBlog" parameterType="int" resultMap="selectBlogMap">
		SELECT
		B.id as blog_id,
		B.title as blog_title,
		B.author_id as blog_author_id,
		P.id,
		P.subject,
		P.contents
		FROM Blog_tb B
		LEFT OUTER JOIN Post_tb P on B.id = P.blog_id
		WHERE B.id = #{id}
	</select>

	<insert id="registBlog" parameterType="Blog" useGeneratedKeys="true" keyColumn="id">
		INSERT INTO blog_tb (title, author_id)
				VALUES (#{title}, #{authorId})
	</insert>

	<update id="updateBlog" parameterType="Blog">
		UPDATE blog_tb
		SET
			title = #{title},
			author_id = #{authorId}
		WHERE id = #{id}
	</update>

	<delete id="deleteBlog" parameterType="Blog">
		DELETE FROM blog_tb
		WHERE id = #{id}
	</delete>
</mapper>

